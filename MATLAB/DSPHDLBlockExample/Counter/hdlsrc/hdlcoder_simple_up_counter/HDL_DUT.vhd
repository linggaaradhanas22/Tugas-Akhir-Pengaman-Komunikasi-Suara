-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\hdlcoder_simple_up_counter\HDL_DUT.vhd
-- Created: 2024-12-21 22:18:31
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- out_rsvd                      ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: HDL_DUT
-- Source Path: hdlcoder_simple_up_counter/HDL_DUT
-- Hierarchy Level: 0
-- Model version: 1.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY HDL_DUT IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        count_threshold                   :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphaEnable                       :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        out_rsvd                          :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END HDL_DUT;


ARCHITECTURE rtl OF HDL_DUT IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant1_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL count_threshold_unsigned         : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay_out1                       : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_out1                         : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Relational_Operator_out1         : std_logic;
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Switch1_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay1_out1                      : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  
  switch_compare_1 <= '1' WHEN alphaEnable > '0' ELSE
      '0';

  enb <= clk_enable;

  Constant1_out1 <= to_unsigned(16#01#, 8);

  count_threshold_unsigned <= unsigned(count_threshold);

  Constant_out1 <= to_unsigned(16#00#, 8);

  Sum_out1 <= Delay_out1 + Constant1_out1;

  
  Relational_Operator_out1 <= '1' WHEN Sum_out1 > count_threshold_unsigned ELSE
      '0';

  
  switch_compare_1_1 <= '1' WHEN Relational_Operator_out1 > '0' ELSE
      '0';

  
  Switch1_out1 <= Sum_out1 WHEN switch_compare_1_1 = '0' ELSE
      Constant_out1;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  Switch_out1 <= Delay_out1 WHEN switch_compare_1 = '0' ELSE
      Switch1_out1;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  out_rsvd <= std_logic_vector(Delay1_out1);

  ce_out <= clk_enable;

END rtl;

